-- What happens when you initialize a repo? Why do you need to do it?

Git maakt een .git/ folder aan waarin metadat wordt bijgehouden. Hierin worden (na het toevoegen van files aan git) wijzigingen bijgehouden.


--How is the staging area different from the working directory and the repository? What value do you think it offers?

De staging area is een tussenfase tussen aangepaste code en een commit. Als ik 2 afzonderlijke dingen aanpas kan ik die ook nog apart committen.
Zo kan je makkelijker goede schone commits doen.

-- How can you use the staging area to make sure you have one commit per logical change?

Door steeds maar 1 logical change per keer in de staging area te zetten. Als er meerdere wijzigingen in 1 file gedaan zijn, moet
je dus na elke logical change een add doen en een commit.

-- What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Als je een experimentele feature wilt toevoegen kan een branch handig zijn.
Als je verschillende versies van een project wilt hebben (bijvoorbeeld met verschillende talen)
Branches helpen hierbij doordat je verschillende versies kan labelen.

-- How do the diagrams help you visualize the branch structure.

Ze verduidelijken de structuur van de branch doordat je de parent van elke commit kan zien. 
JE krijgt een overzicht van alle branches.

-- What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

Het resultaat is dat we weer 1 overzichtelijke branch hebben met alle commits tot dan toe. Door het weer te geven in een diagram blijft duidelijk welke commits op welke branch zijn gedaan.
